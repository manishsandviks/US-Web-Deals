@model deals.earlymoments.com.Models.ShippingModels.BillingDetails

@{
    string _Page1ShippingZip = string.Empty;
    if (Session["NewSBMDetails"] != null)
    {
        _Page1ShippingZip = ((OrderEngine.OrderVariables)Session["NewSBMDetails"]).ShipVars[((OrderEngine.OrderVariables)Session["NewSBMDetails"]).default_shp_id].ship_to_zipcode;
    }    
    if (Request.Form["CCBillZipCode"] != null)
    {
        if (Request.Form["CCBillZipCode"].Trim() != "")
        {
            _Page1ShippingZip = Request.Form["CCBillZipCode"].Trim();
        }
    }

}

<h5><span class="red">*</span>Is your billing address the same as your shipping address?</h5>
<div class="col-md-12 text-center">
    <!--showBillInfo radio-->
    <label class="radio-inline">
        @Html.RadioButtonFor(model => model.isBillingSameToShipping, true, new { @id = "radbillyes", @Checked = true })
        <small>YES</small>
    </label>
    <label class="radio-inline">
        @Html.RadioButtonFor(model => model.isBillingSameToShipping, false, new { @id = "radbillno" })
        <small>NO</small>
    </label>
    <!--showBillInfo radio-->
</div>
<div id="showBillInfo" class="formContainer smallMarginTop10">
    <div class="row formFieldGap">
        <div class="col-md-12 text-center">
            <h5 class="bold red">BILLING INFORMATION</h5>
        </div>
    </div>
    <div class="row formFieldGap">
        <div class="col-md-4 col-sm-4 col-xs-4 formLabel">
            <label><span>*</span> First Name</label>
        </div>
        <div class="col-md-8 col-sm-8 col-xs-8">
            @Html.TextBoxFor(model => model.BillingFirstName, new { @id = "txtBillFirstName", @maxlength = "50", @class = "form-control" })
        </div>
    </div>
    <div class="row formFieldGap">
        <div class="col-md-4 col-sm-4 col-xs-4 formLabel">
            <label><span>*</span> Last Name</label>
        </div>
        <div class="col-md-8 col-sm-8 col-xs-8">
            @Html.TextBoxFor(model => model.BillingLastName, new { @id = "txtBillLastName", @maxlength = "50", @class = "form-control" })
        </div>
    </div>
    <div class="row formFieldGap">
        <div class="col-md-4 col-sm-4 col-xs-4 formLabel">
            <label><span>*</span> Address</label>
        </div>
        <div class="col-md-8 col-sm-8 col-xs-8">
            @Html.TextBoxFor(model => model.BillingAddress1, new { @id = "txtBillStreet", @maxlength = "30", @class = "form-control" })
        </div>
    </div>
    <div class="row formFieldGap">
        <div class="col-md-4 col-sm-4 col-xs-4 formLabel">
            <label>Address 2</label>
        </div>
        <div class="col-md-8 col-sm-8 col-xs-8">
            @Html.TextBoxFor(model => model.BillingAddress2, new { @id = "txtBillStreet2", @maxlength = "30", @class = "form-control" })
        </div>
    </div>
    <div class="row formFieldGap">
        <div class="col-md-4 col-sm-4 col-xs-4 formLabel">
            <label><span>*</span> City</label>
        </div>
        <div class="col-md-8 col-sm-8 col-xs-8">
            @Html.TextBoxFor(model => model.BillingCity, new { @id = "txtBillCity", @maxlength = "50", @class = "form-control" })
        </div>
    </div>
    <div class="row formFieldGap">
        <div class="col-md-4 col-sm-4 col-xs-4 formLabel">
            <label><span>*</span> State</label>
        </div>
        <div class="col-md-8 col-sm-8 col-xs-8">
            @Html.DropDownListFor(model => model.BillingState, (IEnumerable<SelectListItem>)ViewData["StatesList"], "Select State", new { @id = "chkBillState", @class = "form-control" })
        </div>
    </div>
    <div class="row formFieldGap">
        <div class="col-md-4 col-sm-4 col-xs-4 formLabel">
            <label><span>*</span> Zip Code</label>
        </div>
        <div class="col-md-8 col-sm-8 col-xs-8">
            @Html.TextBoxFor(model => model.BillingZipCode, new { @id = "txtBillZipCode", @maxlength = "10", @class = "form-control" })
        </div>
    </div>
</div>
<div class="clearfix"></div>

<div class="col-md-12 text-center marginTop20">
    <p><img src="/Images/cc.png" class="responsiveImg"></p>
</div>
<div class="formContainer smallMarginTop10">
    <div class="row formFieldGap">
        <div class="col-md-4 col-sm-4 col-xs-4 formLabel">
            <label><span>*</span> Card Number</label>
        </div>
        <div class="col-md-8 col-sm-8 col-xs-8">
            @Html.TextBoxFor(model => model.CreditCardNumber, new { @id = "txtCreditCardNumber", @maxlength = "16", @class = "form-control ccnumeric" })
        </div>
    </div>
    <div class="row formFieldGap smallMarginTop10">
        <div class="col-md-4 col-sm-4 col-xs-4 formLabel">
            <label><span>*</span> Exp. Date</label>
        </div>
        <div class="col-md-8 col-sm-8 col-xs-8 form-inline expDate">
            @Html.DropDownListFor(model => model.CardExpiryMonth, (IEnumerable<SelectListItem>)ViewData["MonthList"], "Month", new { @id = "optCardExpiryMonth" })
            @*<span style="color:#000;">&nbsp; / &nbsp;</span>*@
            @Html.DropDownListFor(model => model.CardExpiryYear, (IEnumerable<SelectListItem>)ViewData["YearList"], "Year", new { @id = "optCardExpiryYear" })
        </div>
    </div>
    <div class="row formFieldGap smallMarginTop10">
        <div class="col-md-4 col-sm-4 col-xs-4 formLabel">
            <label><span>*</span> CVV Code</label>
        </div>
        <div class="col-md-8 col-sm-8 col-xs-8 cvvBox">
            <div class="input-group cvv">
                @Html.TextBoxFor(model => model.SecurityCode, new { @id = "txtCVV", @maxlength = "4", @class = "form-control ccnumeric" })
                <div class="input-group-addon modalQ" data-toggle="modal" data-target="#cvvModal">
                    <i class="fa fa-question-circle f18 hand"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="row formFieldGap smallMarginTop10">
        <div class="col-md-4 col-sm-4 col-xs-4 formLabel">
            <label><span>*</span> Billing Zip Code</label>
        </div>
        <div class="col-md-8 col-sm-8 col-xs-8 cvvBox">
            <div class="input-group cvv">
                @Html.TextBoxFor(model => model.CCBillZipCode, new { @id = "txtCCBillZipCode", @maxlength = "10", @class = "form-control ccnumeric" })

                <div class="input-group-addon modalQ" data-toggle="modal" data-target="#ccbillZipModal">
                    <i class="fa fa-question-circle f18 hand"></i>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    Page1ShippingZip = '@_Page1ShippingZip';
</script>
